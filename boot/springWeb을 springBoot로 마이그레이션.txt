
* Spring Legacy Project (Spring MVC Project) 작업시
- java version : 11
- apache tomcat version : 9    					=> javax.xxx 
- IDE : STS3
- spring version : 5.3.27

* Spring Starter Project (Spring Boot Project) 작업시 
- java version : 17
- apache tomcat version : 10 (내장톰캣) => jakarta.xxx
- IDE : STS4
- spring boot version : 3.2.11 (내부 spring 버전 : 6.1.14)

* Spring Boot 특징
- 스프링을 사용하기 위해서 여러가지 복잡한 설정들을 해야만 함 (xml 파일 활용)
  => Spring Boot 사용시 복잡한 환경설정을 덜 할 수 있음 
  => 개발자가 비즈니스 로직을 구현하는 거에만 집중 
- 내장 톰캣을 사용하고 있기 때문에 빠르고 간편하게 배포 가능


===============================================================

* workspace 세팅 
  1) Eclipse Enterprises Java and Web Developer Tools 3.x.x 설치
  2) 기존의 세팅
     - Window > View
     - Window > Preferences
       ㄴ 인코딩설정, 폰트설정
       ㄴ tab 수정
       ㄴ template 수정 (java, jsp(html5))
       ㄴ xml catalog 등록
     - Window > Perspective > Customize Perspective - ShortCuts
     - 서버 세팅 안해도 됨
     
---------------------------------------------------------------

* 프로젝트 생성
	1) Spring Starter Project 생성
  - Name : 프로젝트명
  - Type : Maven
  - Packaing : War
  - Java Version : 17
  - Language : Java
  - Group : com.br
  - Artifact : boot
  - Package : com.br.boot
  - Spring Boot Version : 3.2.11 
  
  2) Dependencies 선택
  - Lombok
  - Spring Web
  - Spring Boot DevTools
  
  3) 폴더 구조
  - src/main/java : java파일 (소스코드 작업)
  - src/main/resources : 로그설정문서, 마이바티스 관련 문서
  - src/main/resources/static : 정적 자원 (이미지, js, css파일들)
  - src/main/webapp/WEB-INF/views : jsp파일 (화면 작업)
  
---------------------------------------------------------------

* jsp 사용을 위한 세팅 

1) 라이브러리 추가 (pom.xml)
	<dependency>
	    <groupId>org.apache.tomcat.embed</groupId>
	    <artifactId>tomcat-embed-jasper</artifactId>
	</dependency>
	
	<dependency>
	    <groupId>jakarta.servlet</groupId>
	    <artifactId>jakarta.servlet-api</artifactId>
	</dependency>
	
	<dependency>
	    <groupId>jakarta.servlet.jsp.jstl</groupId>
	    <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
	</dependency>
	
	<dependency>
	    <groupId>org.glassfish.web</groupId>
	    <artifactId>jakarta.servlet.jsp.jstl</artifactId>
	</dependency>


2) 뷰리졸버관련 세팅(prefix, suffix 등록) : application.properties
	spring.mvc.view.prefix=/WEB-INF/views/
	spring.mvc.view.suffix=.jsp
	
3) 기존 views 폴더 안 페이지들 복사 

4) 정적 자원 디렉토리 등록 (리소스 핸들링)
   - WebMvcConfigurer 구현 클래스 만들기 + @Configuration : com.br.boot.config.WebMvcConfig 클래스
   - addResourceHandlers 메소드 오버라이딩 후 
     		registry.addResourceHandler("mapping값")
     						.addResourceLocations("location값") 작성 

5) server start 해서 
   localhost:8888  url 요청시 main 페이지 잘 뜨는지 
   * 기본적으로 contextPath가 ""로 설정 되어있음 

---------------------------------------------------------------

---------------------------------------------------------------

---------------------------------------------------------------

---------------------------------------------------------------

---------------------------------------------------------------

---------------------------------------------------------------








